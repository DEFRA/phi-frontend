{% extends 'layouts/page.njk' %}
{% block beforeContent %}
  <a href="/plant-health/import-confirmation" class="govuk-back-link" type='button'>Back</a>
{% endblock %}
{% block content %}
  {% call appPageBody() %}
  <form method="[object Object]" action="" novalidate="">
    <div class="govuk-form-group">
      <h1 class="govuk-label-wrapper">
        <label class="govuk-label govuk-label--l" for="event-name">
          What plant or plant product are you importing?
        </label>
      </h1>
      <label class="govuk-label" for="event-name">
        You can enter the scientific name or any synonyms or common names.
      </label>
    <input class="govuk-input" id="query" name="query" type="text">
    <ul class="govuk-task-list solid-div" id="searchResults" style="width: 100%; max-height: 342px; display: none; overflow: auto"></ul>
  </div>
    {% from "govuk/components/button/macro.njk" import govukButton %}

    {{ govukButton({
      text: "Continue",
      id: "submitButton"
    }) }}
  </form>
 
  <script>
    var searchInput = document.getElementById('query');
    var searchResults = document.getElementById('searchResults');
    searchInput.addEventListener('input', function () {
      var inputValue = this
        .value
        .toLowerCase();
    fetchSuggestions();
  });
  function fetchSuggestions(query) { // Mock API endpoint URL
    var apiUrl = 'http://localhost:3004/mock-api/products';
    fetch(apiUrl)
      .then(response => response.json())
      .then(data => renderSuggestions(data))
      .catch(error => console.log('Error fetching suggestions:', error));
  }
  function renderSuggestions(suggestions) {
    var searchInput = document.getElementById('query')?.value;
    searchResults.innerHTML = '';

    suggestions = suggestions.filter(function (item) {
      return item.name.match(new RegExp(searchInput, 'gi'));
    });
    console.log('suggestions:', suggestions)
    suggestions.forEach(function (item) {
      console.log(item)
      var li = document.createElement('li');
      li.className = "govuk-task-list__item govuk-task-list__item--with-link";
      searchResults.appendChild(li);
      var division = document.createElement('div');
      division.className = "govuk-task-list__name-and-hint";
      li.appendChild(division);  
       if (searchInput.indexOf(item.name)){
        var strongElement = document.createElement('strong');
        var regExp = new RegExp(searchInput, 'gi');
        var matchingText = item.name.match(regExp);
        strongElement.textContent = matchingText;
        strongElement.style.color = "red";
        var result = item.name.replace(matchingText, strongElement.outerHTML); 
        division.innerHTML = result;
      }
      var anchor = document.createElement('a');
      anchor.className = "govuk-link govuk-task-list__link";
      anchor.href = "#";
      division.appendChild(anchor);
    });
    if (suggestions.length > 0 && searchInput !== '') {
      searchResults.style.display = 'inline-block';
    } else {
      searchResults.innerHTML = '';
      searchResults.style.display = 'none';
    }
  }
  </script>

  {% set supportSection = { title: getHelpSection.titleText, supportMail: getHelpSection.supportUrl.href, email: getHelpSection.supportUrl.email, description: getHelpSection.supportUrl.text } %}
  {% include "partials/get-help.njk" %}
  
  {% endcall %}
{% endblock %}