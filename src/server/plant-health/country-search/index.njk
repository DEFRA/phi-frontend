{% extends 'layouts/page.njk' %}
{% block beforeContent %}
{% from "govuk/components/phase-banner/macro.njk" import govukPhaseBanner %}

{{ govukPhaseBanner({
  tag: {
    text: getHelpSection.betaText
  },
  html: getHelpSection.betabannertext1+" "+'<a class="govuk-link" href="https://defragroup.eu.qualtrics.com/jfe/form/SV_3fnzAvYuzyPg9cG">feedback</a>'+" "+getHelpSection.betabannertext2
}) }}
  <a href="/plant-health/import-confirmation?whereareyouimportinginto=gb&searchQuery={{fullSearchQuery.value}}&&countryCode={{countryCode}}" class="govuk-back-link" type='button'>Back</a>
{% endblock %}
{% block content %}
  {% call appPageBody() %}
  {% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
 {% if errors.list %}
    {{ govukErrorSummary(errors.list) }}
  {% endif %}
  <form action='/plant-health/country-search' method="get" autocomplete="off">
   <input id="hostRef" name="hostRef" style="display: none;" value={{hostRef}}></input>
    <input id="eppoCode" name="eppoCode" style="display: none;" value={{eppoCode}}></input>
    <input id="searchQuery" name="searchQuery" style="display: none;" value='{{searchQuery.value}}'></input>
    <input id="fullSearchQuery" name="fullSearchQuery" style="display: none;" value='{{fullSearchQuery.value}}'></input>
    <div class="govuk-form-group">
      <h1 class="govuk-label-wrapper">
        <label class="govuk-label govuk-label--l" for="event-name">
          {{mainContent.headerText1}} {{searchQuery.value  | replace(")", "") }}  {{mainContent.headerText2}}
        </label>
      </h1>
      <label class="govuk-label govuk-!-padding-bottom-2" for="event-name">
        {{mainContent.searchText1}}
      </label>
      <label class="govuk-label govuk-!-padding-bottom-2" for="event-name">
        {{mainContent.searchText2}}
      </label>
      {% if errorMessage.message %}
      <p id="event-name-error" class="govuk-error-message">
    <span class="govuk-visually-hidden">Error:</span> {{errorMessage.message.text}}
  </p>
  <input class="govuk-input govuk-input--error" id="query" autocomplete="off" name="countrySearchQuery" type="text" aria-describedby="event-name-hint event-name-error">
 {% else %}
    {% if countrySearchQuery.value %}
    <input class="govuk-input" id="query" name="countrySearchQuery" autocomplete="off" type="text" value='{{countrySearchQuery.value}}'>
    {% else %}
     <input class="govuk-input" id="query" name="countrySearchQuery" autocomplete="off" type="text">
    {% endif %}
   {% endif %}
    <ul class="govuk-task-list solid-div" id="searchResults" style="width: 99.3%; max-height: 450px; display: none; overflow: auto"></ul>
    <input class="govuk-input" id="emptyCountrySearchQuery" name="emptyCountrySearchQuery" autocomplete="off" type="text"  style="display: none;">
     <input id="countryCode" name="countryCode" style="display: none;" value={{countryCode}}></input>
  </div>
    {% from "govuk/components/button/macro.njk" import govukButton %}

    {{ govukButton({
      text: "Continue",
      id: "submitButton"
    }) }}
  </form>
 
  <script>
   
    var searchInput = document.getElementById('query');
    var searchResults = document.getElementById('searchResults');
    var inputValue;
   let currentIndex = -1;
    searchInput.addEventListener('input', function () {
    currentIndex = -1;
    var countryCodeElement = document.getElementById('countryCode');
    countryCodeElement.setAttribute('value', '');    
      inputValue = this
        .value;
    if (inputValue.length > 0) {
      fetchSuggestions(inputValue);
    } else {
      searchResults.innerHTML = '';
      searchResults.style.display = 'none';
    }
  });
  function fetchSuggestions(query) { // Mock API endpoint URL
    var apiUrl = '/search/countries?searchQuery=' + query;
    var emptyCoutrySearchValue = document.getElementById('emptyCountrySearchQuery');
      emptyCoutrySearchValue.value = true;
    fetch(apiUrl)
      .then(response => response.json())
      .then(data => {
        console.log('DATA', data)
        result = renderSuggestions(data);
        return result ? result : '';
      })
      .catch(error => console.log('Error fetching suggestions:', error));
  }
  function containsSpecialCharacter(str) {
    let specialChars =
        "!@#$%^&*()-_=+[{]};:'\",<.>/?\\|";
    for (var i = 0; i < str.length; i++) {
        if (specialChars.indexOf(str[i]) !== -1) {
            return true;
        }
    }
    return false;
}
    async function sortList() {
      // Select the ul element
      const ul = document.getElementById('searchResults');
      // Get the li elements
      const liElements = ul.getElementsByTagName('li');
      // Convert HTMLCollection to an array
      const liArray = Array.from(liElements);
      // Sort the array based on the text content of the li elements
      liArray.sort((a, b) => a.textContent.localeCompare(b.textContent));
      // Clear the ul element
      ul.innerHTML = '';
      // Append the sorted li elements back to the ul element
      liArray.forEach(li => ul.appendChild(li));
    }

  var regexValue;
  async function renderSuggestions(suggestions) {
   
    var searchInput = document.getElementById('query')?.value;
    searchResults.innerHTML = '';
    var json = suggestions.message.countries[0].COUNTRY_GROUPING.COUNTRY_GROUPING
    console.log('JSON', json)
    suggestions = json.filter(function (item) {
      let result = null;
      var regexValue = inputValue.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
      console.log('REGEX', regexValue);
      if (item.COUNTRY_NAME.match(new RegExp(regexValue, "gi"))){
        result = item
      }
      return result
    });
    console.log('suggestions:', suggestions)
    createAndAppendLiElement(suggestions, regexValue)
    if (suggestions.length > 0 && inputValue !== '') {
      var emptyCoutrySearchValue = document.getElementById('emptyCountrySearchQuery');
      emptyCoutrySearchValue.value = true;
      await sortList()
      searchResults.style.display = 'inline-block';
      searchResults.addEventListener('click', function(e) {
      var inputCodeValue = document.getElementById('inputCode'+e.target.id.slice(-1));
      var countryCodeElement = document.getElementById('countryCode');
      if(inputCodeValue.value.length > 0){
        countryCodeElement.setAttribute('value', inputCodeValue.value);
      } 
      var autocompleteInputValue = document.getElementById('query');
      autocompleteInputValue.value = document.getElementById('div-'+e.target.id).textContent; 
       searchResults.innerHTML = '';
      searchResults.style.display = 'none';
      emptyCoutrySearchValue.value = false;
      });
    } else {
      var liNew = document.createElement('li');
      liNew.className = "govuk-task-list__item govuk-task-list__item--with-link";
      liNew.textContent = "No results found"
      searchResults.appendChild(liNew);
      searchResults.style.display = 'inline-block';
      var autocompleteInputValue = document.getElementById('emptyCountrySearchQuery');
      autocompleteInputValue.value = true;
    }
  }
  
  function capitalizeFirstLetter(string) {
    if (string !== undefined){
     return string.charAt(0).toUpperCase() + string.slice(1);
    }
  }

  function createAndAppendLiElement(suggestions, regexValue){
   suggestions.forEach(function (item, index) {
      console.log(item)
      var inputCode = document.createElement('input');
      inputCode.id = 'inputCode' +index;
      inputCode.style = 'display:none'
      inputCode.setAttribute('value', item.COUNTRY_CODE);
      var li = document.createElement('li');
      li.className = "govuk-task-list__item govuk-task-list__item--with-link";
      li.id = 'searchResults'+index;
      li.appendChild(inputCode)
      searchResults.appendChild(li);
      var division = document.createElement('div');
      division.className = "govuk-task-list__name-and-hint";
      division.id = 'div-searchResults'+index;
      division.style.paddingLeft = '5px';
      li.appendChild(division);  
      var result;
      var strongElement = document.createElement('strong');
      regexValue = inputValue.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
      if (inputValue.length > 1){
       strongElement.textContent = item.COUNTRY_NAME.match(new RegExp(regexValue, "gi"));
       result = capitalizeFirstLetter(item.COUNTRY_NAME).replace(new RegExp(regexValue, "gi"), strongElement.outerHTML);
      }else {
      if (item.COUNTRY_NAME.substr(0, inputValue.length).toUpperCase() === inputValue.toUpperCase()){
        strongElement.textContent = item.COUNTRY_NAME.substr(0, inputValue.length);
      }
      else {
        strongElement.textContent = inputValue
      }
       result = item.COUNTRY_NAME.replace(new RegExp(inputValue, "gi"), strongElement.outerHTML);
      }
      
      division.innerHTML = result;
      console.log("result in strong",result)
      var anchor = document.createElement('a');
      anchor.className = "govuk-link govuk-task-list__link";
      anchor.href = "#";
      anchor.id = 'searchResults'+index;
      division.appendChild(anchor);
    });
  }
  document.getElementById('query').addEventListener('keydown', function(e) {    
      const dropdownButton = document.getElementById('query'); 
    const dropdownContent = document.getElementById('searchResults');

     const dropdownOptions = dropdownContent.getElementsByTagName("li")   
     
    if (dropdownOptions.length > 0) {    

  if (event.keyCode === 40) {
     
        event.preventDefault();
        currentIndex = (currentIndex + 1) % dropdownOptions.length;
        dropdownOptions[currentIndex].focus();
        addActive(dropdownOptions[currentIndex]);
    
      //  highlightOption(dropdownOptions[currentIndex]);
      } 

 
      else if (event.key ==='ArrowUp') {     
        event.preventDefault();
        currentIndex = (currentIndex - 1 + dropdownOptions.length) % dropdownOptions.length;
        dropdownOptions[currentIndex].focus();
        addActive(dropdownOptions[currentIndex]);
       // highlightOption(dropdownOptions[currentIndex]);     
      } else if (event.key === 'Enter') {
        event.preventDefault();
        if (currentIndex > -1) {

          searchInput.value = dropdownOptions[currentIndex].textContent;
         
                searchResults.style.display = 'none';
          searchInput.setAttribute('aria-expanded', 'false');
     
      var el = document.getElementById('inputCode'+currentIndex);
     
      
         var countryCodeElement = document.getElementById('countryCode');
    countryCodeElement.setAttribute('value', el.value);  
         
        }
      } else if (event.key === 'Escape') {
        searchResults.innerHTML = '';
        searchResults.style.display = 'none';
        searchInput.setAttribute('aria-expanded', 'false');
      }
    }
  });

function highlightOption(option) {

const dropdownButton = document.getElementById('query'); 
    const dropdownContent = document.getElementById('searchResults');
    const options = dropdownContent.getElementsByTagName("li");
    for (let item of options) {
      const element =document.getElementById('div-searchResults'+currentIndex)  
 
    item.classList.remove('highlighted')
     element.style.color = "black"
      item.style.backgroundColor = "white"
      item.classList.remove("autocomplete-active"); 
          element.style.color = "black"
       
}    
  
  const element1 =document.getElementById('div-searchResults'+currentIndex)  

  option.classList.add("autocomplete-active");
   element1.style.color="white"
  }
 function addActive(x) {

    if (!x) return false;
  
    removeActive(x);
    if (currentIndex >= x.length) currentIndex = 0;
    if (currentIndex < 0) currentIndex = (x.length - 1);
    const element1 =document.getElementById('div-searchResults'+currentIndex)  
    element1.style.color="white"
    x.classList.add("autocomplete-active");
  }
  function removeActive(x) {
  const dropdownButton = document.getElementById('query'); 
    const dropdownContent = document.getElementById('searchResults');
    const options = dropdownContent.getElementsByTagName("li");
   
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < options.length; i++) {   
    const element1 =options[i].querySelector("div");
   element1.style.color="black"
     options[i].classList.remove("autocomplete-active");
          }
  }

  document.addEventListener('click', (event) => {
    if (!searchInput.contains(event.target) && !searchResults.contains(event.target)) {
      searchResults.style.display = 'none';
      searchInput.setAttribute('aria-expanded', 'false');
    }
  });
  </script>
<style>
.autocomplete-active {
  background-color: #1D70B8 !important; 
 color:white
}
</style>
  {% set supportSection = { title: getHelpSection.titleText, supportMail: getHelpSection.supportUrl.href, email: getHelpSection.supportUrl.email, description: getHelpSection.supportUrl.text } %}
  {% include "partials/get-help.njk" %}
  
  {% endcall %}
{% endblock %}